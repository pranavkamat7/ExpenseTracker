{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindOneOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass FindOneOperation extends command_1.CommandOperation {\n  constructor(collection, query, options) {\n    super(collection, options);\n    this.options = options;\n    this.collection = collection;\n    this.query = query;\n  }\n  execute(server, session, callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = {\n      ...this.options,\n      ...this.bsonOptions,\n      session\n    };\n    try {\n      const cursor = coll.find(query, options).limit(-1).batchSize(1);\n      // Return the item\n      cursor.next((err, item) => {\n        if (err != null) return callback(err);\n        callback(undefined, item || undefined);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n}\nexports.FindOneOperation = FindOneOperation;\noperation_1.defineAspects(FindOneOperation, [operation_1.Aspect.EXPLAINABLE]);","map":{"version":3,"names":["command_1","require","operation_1","FindOneOperation","CommandOperation","constructor","collection","query","options","execute","server","session","callback","coll","bsonOptions","cursor","find","limit","batchSize","next","err","item","undefined","e","exports","defineAspects","Aspect","EXPLAINABLE"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\operations\\find_one.ts"],"sourcesContent":["import type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { FindOptions } from './find';\nimport type { Server } from '../sdam/server';\nimport { CommandOperation } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport type { ClientSession } from '../sessions';\n\n/** @internal */\nexport class FindOneOperation extends CommandOperation<Document> {\n  options: FindOptions;\n  collection: Collection;\n  query: Document;\n\n  constructor(collection: Collection, query: Document, options: FindOptions) {\n    super(collection, options);\n\n    this.options = options;\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const coll = this.collection;\n    const query = this.query;\n    const options = { ...this.options, ...this.bsonOptions, session };\n\n    try {\n      const cursor = coll.find(query, options).limit(-1).batchSize(1);\n\n      // Return the item\n      cursor.next((err, item) => {\n        if (err != null) return callback(err);\n        callback(undefined, item || undefined);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n}\n\ndefineAspects(FindOneOperation, [Aspect.EXPLAINABLE]);\n"],"mappings":";;;;;;AAKA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AAGA;AACA,MAAaE,gBAAiB,SAAQH,SAAA,CAAAI,gBAA0B;EAK9DC,YAAYC,UAAsB,EAAEC,KAAe,EAAEC,OAAoB;IACvE,KAAK,CAACF,UAAU,EAAEE,OAAO,CAAC;IAE1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,KAAK,GAAGA,KAAK;EACpB;EAEAE,OAAOA,CAACC,MAAc,EAAEC,OAAsB,EAAEC,QAA4B;IAC1E,MAAMC,IAAI,GAAG,IAAI,CAACP,UAAU;IAC5B,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMC,OAAO,GAAG;MAAE,GAAG,IAAI,CAACA,OAAO;MAAE,GAAG,IAAI,CAACM,WAAW;MAAEH;IAAO,CAAE;IAEjE,IAAI;MACF,MAAMI,MAAM,GAAGF,IAAI,CAACG,IAAI,CAACT,KAAK,EAAEC,OAAO,CAAC,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;MAE/D;MACAH,MAAM,CAACI,IAAI,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAI;QACxB,IAAID,GAAG,IAAI,IAAI,EAAE,OAAOR,QAAQ,CAACQ,GAAG,CAAC;QACrCR,QAAQ,CAACU,SAAS,EAAED,IAAI,IAAIC,SAAS,CAAC;MACxC,CAAC,CAAC;KACH,CAAC,OAAOC,CAAC,EAAE;MACVX,QAAQ,CAACW,CAAC,CAAC;;EAEf;;AA7BFC,OAAA,CAAArB,gBAAA,GAAAA,gBAAA;AAgCAD,WAAA,CAAAuB,aAAa,CAACtB,gBAAgB,EAAE,CAACD,WAAA,CAAAwB,MAAM,CAACC,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}