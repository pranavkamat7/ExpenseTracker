{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plain = void 0;\nconst bson_1 = require(\"../../bson\");\nconst auth_provider_1 = require(\"./auth_provider\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nclass Plain extends auth_provider_1.AuthProvider {\n  auth(authContext, callback) {\n    const {\n      connection,\n      credentials\n    } = authContext;\n    if (!credentials) {\n      return callback(new error_1.MongoDriverError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new bson_1.Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    connection.command(utils_1.ns('$external.$cmd'), command, undefined, callback);\n  }\n}\nexports.Plain = Plain;","map":{"version":3,"names":["bson_1","require","auth_provider_1","error_1","utils_1","Plain","AuthProvider","auth","authContext","callback","connection","credentials","MongoDriverError","username","password","payload","Binary","Buffer","from","command","saslStart","mechanism","autoAuthorize","ns","undefined","exports"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\cmap\\auth\\plain.ts"],"sourcesContent":["import { Binary } from '../../bson';\nimport { AuthProvider, AuthContext } from './auth_provider';\nimport { MongoDriverError } from '../../error';\nimport { Callback, ns } from '../../utils';\n\nexport class Plain extends AuthProvider {\n  auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoDriverError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command(ns('$external.$cmd'), command, undefined, callback);\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AACA,MAAAE,OAAA,GAAAF,OAAA;AACA,MAAAG,OAAA,GAAAH,OAAA;AAEA,MAAaI,KAAM,SAAQH,eAAA,CAAAI,YAAY;EACrCC,IAAIA,CAACC,WAAwB,EAAEC,QAAkB;IAC/C,MAAM;MAAEC,UAAU;MAAEC;IAAW,CAAE,GAAGH,WAAW;IAC/C,IAAI,CAACG,WAAW,EAAE;MAChB,OAAOF,QAAQ,CAAC,IAAIN,OAAA,CAAAS,gBAAgB,CAAC,uCAAuC,CAAC,CAAC;;IAEhF,MAAMC,QAAQ,GAAGF,WAAW,CAACE,QAAQ;IACrC,MAAMC,QAAQ,GAAGH,WAAW,CAACG,QAAQ;IAErC,MAAMC,OAAO,GAAG,IAAIf,MAAA,CAAAgB,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,OAAOL,QAAQ,OAAOC,QAAQ,EAAE,CAAC,CAAC;IACzE,MAAMK,OAAO,GAAG;MACdC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,OAAO;MAClBN,OAAO,EAAEA,OAAO;MAChBO,aAAa,EAAE;KAChB;IAEDZ,UAAU,CAACS,OAAO,CAACf,OAAA,CAAAmB,EAAE,CAAC,gBAAgB,CAAC,EAAEJ,OAAO,EAAEK,SAAS,EAAEf,QAAQ,CAAC;EACxE;;AAlBFgB,OAAA,CAAApB,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}