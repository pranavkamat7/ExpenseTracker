{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaitQueueTimeoutError = exports.PoolClosedError = void 0;\nconst error_1 = require(\"../error\");\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nclass PoolClosedError extends error_1.MongoDriverError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n  get name() {\n    return 'MongoPoolClosedError';\n  }\n}\nexports.PoolClosedError = PoolClosedError;\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nclass WaitQueueTimeoutError extends error_1.MongoDriverError {\n  constructor(pool) {\n    super('Timed out while checking out a connection from connection pool');\n    this.address = pool.address;\n  }\n  get name() {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\nexports.WaitQueueTimeoutError = WaitQueueTimeoutError;","map":{"version":3,"names":["error_1","require","PoolClosedError","MongoDriverError","constructor","pool","address","name","exports","WaitQueueTimeoutError"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\cmap\\errors.ts"],"sourcesContent":["import { MongoDriverError } from '../error';\nimport type { Connection } from './connection';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: Connection | ConnectionPool) {\n    super('Timed out while checking out a connection from connection pool');\n    this.address = pool.address;\n  }\n\n  get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAIA;;;;AAIA,MAAaC,eAAgB,SAAQF,OAAA,CAAAG,gBAAgB;EAInDC,YAAYC,IAAoB;IAC9B,KAAK,CAAC,iEAAiE,CAAC;IACxE,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC7B;EAEA,IAAIC,IAAIA,CAAA;IACN,OAAO,sBAAsB;EAC/B;;AAXFC,OAAA,CAAAN,eAAA,GAAAA,eAAA;AAcA;;;;AAIA,MAAaO,qBAAsB,SAAQT,OAAA,CAAAG,gBAAgB;EAIzDC,YAAYC,IAAiC;IAC3C,KAAK,CAAC,gEAAgE,CAAC;IACvE,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC7B;EAEA,IAAIC,IAAIA,CAAA;IACN,OAAO,4BAA4B;EACrC;;AAXFC,OAAA,CAAAC,qBAAA,GAAAA,qBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}