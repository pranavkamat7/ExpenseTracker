{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateCollectionOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\nconst collection_1 = require(\"../collection\");\nconst ILLEGAL_COMMAND_FIELDS = new Set(['w', 'wtimeout', 'j', 'fsync', 'autoIndexId', 'pkFactory', 'raw', 'readPreference', 'session', 'readConcern', 'writeConcern', 'raw', 'fieldsAsRaw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bsonRegExp', 'serializeFunctions', 'ignoreUndefined']);\n/** @internal */\nclass CreateCollectionOperation extends command_1.CommandOperation {\n  constructor(db, name, options = {}) {\n    super(db, options);\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n  execute(server, session, callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n    const done = err => {\n      if (err) {\n        return callback(err);\n      }\n      callback(undefined, new collection_1.Collection(db, name, options));\n    };\n    const cmd = {\n      create: name\n    };\n    for (const n in options) {\n      if (options[n] != null && typeof options[n] !== 'function' && !ILLEGAL_COMMAND_FIELDS.has(n)) {\n        cmd[n] = options[n];\n      }\n    }\n    // otherwise just execute the command\n    super.executeCommand(server, session, cmd, done);\n  }\n}\nexports.CreateCollectionOperation = CreateCollectionOperation;\noperation_1.defineAspects(CreateCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["command_1","require","operation_1","collection_1","ILLEGAL_COMMAND_FIELDS","Set","CreateCollectionOperation","CommandOperation","constructor","db","name","options","execute","server","session","callback","done","err","undefined","Collection","cmd","create","n","has","executeCommand","exports","defineAspects","Aspect","WRITE_OPERATION"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\operations\\create_collection.ts"],"sourcesContent":["import { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { Collection } from '../collection';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { PkFactory } from '../mongo_client';\nimport type { ClientSession } from '../sessions';\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern',\n  'raw',\n  'fieldsAsRaw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bsonRegExp',\n  'serializeFunctions',\n  'ignoreUndefined'\n]);\n\n/** @public\n * Configuration options for timeseries collections\n * @see https://docs.mongodb.com/manual/core/timeseries-collections/\n */\nexport interface TimeSeriesCollectionOptions extends Document {\n  timeField: string;\n  metaField?: string;\n  granularity?: string;\n}\n\n/** @public */\nexport interface CreateCollectionOptions extends CommandOperationOptions {\n  /** Returns an error if the collection does not exist */\n  strict?: boolean;\n  /** Create a capped collection */\n  capped?: boolean;\n  /** @deprecated Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0 */\n  autoIndexId?: boolean;\n  /** The size of the capped collection in bytes */\n  size?: number;\n  /** The maximum number of documents in the capped collection */\n  max?: number;\n  /** Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag */\n  flags?: number;\n  /** Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher */\n  storageEngine?: Document;\n  /** Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher */\n  validator?: Document;\n  /** Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher */\n  validationLevel?: string;\n  /** Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher */\n  validationAction?: string;\n  /** Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher */\n  indexOptionDefaults?: Document;\n  /** The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher */\n  viewOn?: string;\n  /** An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher */\n  pipeline?: Document[];\n  /** A primary key factory function for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** A document specifying configuration options for timeseries collections. */\n  timeseries?: TimeSeriesCollectionOptions;\n  /** The number of seconds after which a document in a timeseries collection expires. */\n  expireAfterSeconds?: number;\n}\n\n/** @internal */\nexport class CreateCollectionOperation extends CommandOperation<Collection> {\n  options: CreateCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: CreateCollectionOptions = {}) {\n    super(db, options);\n\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Collection>): void {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    const done: Callback = err => {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(undefined, new Collection(db, name, options));\n    };\n\n    const cmd: Document = { create: name };\n    for (const n in options) {\n      if (\n        (options as any)[n] != null &&\n        typeof (options as any)[n] !== 'function' &&\n        !ILLEGAL_COMMAND_FIELDS.has(n)\n      ) {\n        cmd[n] = (options as any)[n];\n      }\n    }\n\n    // otherwise just execute the command\n    super.executeCommand(server, session, cmd, done);\n  }\n}\n\ndefineAspects(CreateCollectionOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AAQA,MAAMG,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CACrC,GAAG,EACH,UAAU,EACV,GAAG,EACH,OAAO,EACP,aAAa,EACb,WAAW,EACX,KAAK,EACL,gBAAgB,EAChB,SAAS,EACT,aAAa,EACb,cAAc,EACd,KAAK,EACL,aAAa,EACb,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,YAAY,EACZ,oBAAoB,EACpB,iBAAiB,CAClB,CAAC;AAgDF;AACA,MAAaC,yBAA0B,SAAQN,SAAA,CAAAO,gBAA4B;EAKzEC,YAAYC,EAAM,EAAEC,IAAY,EAAEC,OAAA,GAAmC,EAAE;IACrE,KAAK,CAACF,EAAE,EAAEE,OAAO,CAAC;IAElB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEAE,OAAOA,CAACC,MAAc,EAAEC,OAAsB,EAAEC,QAA8B;IAC5E,MAAMN,EAAE,GAAG,IAAI,CAACA,EAAE;IAClB,MAAMC,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5B,MAAMK,IAAI,GAAaC,GAAG,IAAG;MAC3B,IAAIA,GAAG,EAAE;QACP,OAAOF,QAAQ,CAACE,GAAG,CAAC;;MAGtBF,QAAQ,CAACG,SAAS,EAAE,IAAIf,YAAA,CAAAgB,UAAU,CAACV,EAAE,EAAEC,IAAI,EAAEC,OAAO,CAAC,CAAC;IACxD,CAAC;IAED,MAAMS,GAAG,GAAa;MAAEC,MAAM,EAAEX;IAAI,CAAE;IACtC,KAAK,MAAMY,CAAC,IAAIX,OAAO,EAAE;MACvB,IACGA,OAAe,CAACW,CAAC,CAAC,IAAI,IAAI,IAC3B,OAAQX,OAAe,CAACW,CAAC,CAAC,KAAK,UAAU,IACzC,CAAClB,sBAAsB,CAACmB,GAAG,CAACD,CAAC,CAAC,EAC9B;QACAF,GAAG,CAACE,CAAC,CAAC,GAAIX,OAAe,CAACW,CAAC,CAAC;;;IAIhC;IACA,KAAK,CAACE,cAAc,CAACX,MAAM,EAAEC,OAAO,EAAEM,GAAG,EAAEJ,IAAI,CAAC;EAClD;;AAvCFS,OAAA,CAAAnB,yBAAA,GAAAA,yBAAA;AA0CAJ,WAAA,CAAAwB,aAAa,CAACpB,yBAAyB,EAAE,CAACJ,WAAA,CAAAyB,MAAM,CAACC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}