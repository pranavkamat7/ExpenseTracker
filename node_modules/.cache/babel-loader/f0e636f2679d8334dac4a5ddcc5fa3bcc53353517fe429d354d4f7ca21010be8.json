{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimatedDocumentCountOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst command_1 = require(\"./command\");\nconst utils_1 = require(\"../utils\");\n/** @internal */\nclass EstimatedDocumentCountOperation extends command_1.CommandOperation {\n  constructor(collection, options = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n  execute(server, session, callback) {\n    if (utils_1.maxWireVersion(server) < 12) {\n      return this.executeLegacy(server, session, callback);\n    }\n    const pipeline = [{\n      $collStats: {\n        count: {}\n      }\n    }, {\n      $group: {\n        _id: 1,\n        n: {\n          $sum: '$count'\n        }\n      }\n    }];\n    const cmd = {\n      aggregate: this.collectionName,\n      pipeline,\n      cursor: {}\n    };\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n    super.executeCommand(server, session, cmd, (err, response) => {\n      var _a, _b;\n      if (err && err.code !== 26) {\n        callback(err);\n        return;\n      }\n      callback(undefined, ((_b = (_a = response === null || response === void 0 ? void 0 : response.cursor) === null || _a === void 0 ? void 0 : _a.firstBatch[0]) === null || _b === void 0 ? void 0 : _b.n) || 0);\n    });\n  }\n  executeLegacy(server, session, callback) {\n    const cmd = {\n      count: this.collectionName\n    };\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(undefined, response.n || 0);\n    });\n  }\n}\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\noperation_1.defineAspects(EstimatedDocumentCountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":{"version":3,"names":["operation_1","require","command_1","utils_1","EstimatedDocumentCountOperation","CommandOperation","constructor","collection","options","collectionName","execute","server","session","callback","maxWireVersion","executeLegacy","pipeline","$collStats","count","$group","_id","n","$sum","cmd","aggregate","cursor","maxTimeMS","executeCommand","err","response","code","undefined","_b","_a","firstBatch","exports","defineAspects","Aspect","READ_OPERATION","RETRYABLE"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\operations\\estimated_document_count.ts"],"sourcesContent":["import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { Callback, maxWireVersion } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\nimport type { MongoServerError } from '../error';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<number>): void {\n    if (maxWireVersion(server) < 12) {\n      return this.executeLegacy(server, session, callback);\n    }\n    const pipeline = [{ $collStats: { count: {} } }, { $group: { _id: 1, n: { $sum: '$count' } } }];\n\n    const cmd: Document = { aggregate: this.collectionName, pipeline, cursor: {} };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err && (err as MongoServerError).code !== 26) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.cursor?.firstBatch[0]?.n || 0);\n    });\n  }\n\n  executeLegacy(server: Server, session: ClientSession, callback: Callback<number>): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n"],"mappings":";;;;;;AAAA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAD,OAAA;AACA,MAAAE,OAAA,GAAAF,OAAA;AAiBA;AACA,MAAaG,+BAAgC,SAAQF,SAAA,CAAAG,gBAAwB;EAI3EC,YAAYC,UAAsB,EAAEC,OAAA,GAAyC,EAAE;IAC7E,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGF,UAAU,CAACE,cAAc;EACjD;EAEAC,OAAOA,CAACC,MAAc,EAAEC,OAAsB,EAAEC,QAA0B;IACxE,IAAIV,OAAA,CAAAW,cAAc,CAACH,MAAM,CAAC,GAAG,EAAE,EAAE;MAC/B,OAAO,IAAI,CAACI,aAAa,CAACJ,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;IAEtD,MAAMG,QAAQ,GAAG,CAAC;MAAEC,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAE;IAAE,CAAE,EAAE;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,CAAC,EAAE;UAAEC,IAAI,EAAE;QAAQ;MAAE;IAAE,CAAE,CAAC;IAE/F,MAAMC,GAAG,GAAa;MAAEC,SAAS,EAAE,IAAI,CAACf,cAAc;MAAEO,QAAQ;MAAES,MAAM,EAAE;IAAE,CAAE;IAE9E,IAAI,OAAO,IAAI,CAACjB,OAAO,CAACkB,SAAS,KAAK,QAAQ,EAAE;MAC9CH,GAAG,CAACG,SAAS,GAAG,IAAI,CAAClB,OAAO,CAACkB,SAAS;;IAGxC,KAAK,CAACC,cAAc,CAAChB,MAAM,EAAEC,OAAO,EAAEW,GAAG,EAAE,CAACK,GAAG,EAAEC,QAAQ,KAAI;;MAC3D,IAAID,GAAG,IAAKA,GAAwB,CAACE,IAAI,KAAK,EAAE,EAAE;QAChDjB,QAAQ,CAACe,GAAG,CAAC;QACb;;MAGFf,QAAQ,CAACkB,SAAS,EAAE,EAAAC,EAAA,IAAAC,EAAA,GAAAJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEJ,MAAM,cAAAQ,EAAA,uBAAAA,EAAA,CAAEC,UAAU,CAAC,CAAC,CAAC,cAAAF,EAAA,uBAAAA,EAAA,CAAEX,CAAC,KAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;EACJ;EAEAN,aAAaA,CAACJ,MAAc,EAAEC,OAAsB,EAAEC,QAA0B;IAC9E,MAAMU,GAAG,GAAa;MAAEL,KAAK,EAAE,IAAI,CAACT;IAAc,CAAE;IAEpD,IAAI,OAAO,IAAI,CAACD,OAAO,CAACkB,SAAS,KAAK,QAAQ,EAAE;MAC9CH,GAAG,CAACG,SAAS,GAAG,IAAI,CAAClB,OAAO,CAACkB,SAAS;;IAGxC,KAAK,CAACC,cAAc,CAAChB,MAAM,EAAEC,OAAO,EAAEW,GAAG,EAAE,CAACK,GAAG,EAAEC,QAAQ,KAAI;MAC3D,IAAID,GAAG,EAAE;QACPf,QAAQ,CAACe,GAAG,CAAC;QACb;;MAGFf,QAAQ,CAACkB,SAAS,EAAEF,QAAQ,CAACR,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;;AA/CFc,OAAA,CAAA/B,+BAAA,GAAAA,+BAAA;AAkDAJ,WAAA,CAAAoC,aAAa,CAAChC,+BAA+B,EAAE,CAACJ,WAAA,CAAAqC,MAAM,CAACC,cAAc,EAAEtC,WAAA,CAAAqC,MAAM,CAACE,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}