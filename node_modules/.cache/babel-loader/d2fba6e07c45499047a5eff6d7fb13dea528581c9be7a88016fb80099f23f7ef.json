{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass CountOperation extends command_1.CommandOperation {\n  constructor(namespace, filter, options) {\n    super({\n      s: {\n        namespace: namespace\n      }\n    }, options);\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n  execute(server, session, callback) {\n    const options = this.options;\n    const cmd = {\n      count: this.collectionName,\n      query: this.query\n    };\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n    if (typeof options.hint !== 'undefined') {\n      cmd.hint = options.hint;\n    }\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n    super.executeCommand(server, session, cmd, (err, result) => {\n      callback(err, result ? result.n : 0);\n    });\n  }\n}\nexports.CountOperation = CountOperation;\noperation_1.defineAspects(CountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":{"version":3,"names":["operation_1","require","command_1","CountOperation","CommandOperation","constructor","namespace","filter","options","s","collectionName","collection","query","execute","server","session","callback","cmd","count","limit","skip","hint","maxTimeMS","executeCommand","err","result","n","exports","defineAspects","Aspect","READ_OPERATION","RETRYABLE"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\operations\\count.ts"],"sourcesContent":["import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface CountOptions extends CommandOperationOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** An index name hint for the query. */\n  hint?: string | Document;\n}\n\n/** @internal */\nexport class CountOperation extends CommandOperation<number> {\n  options: CountOptions;\n  collectionName?: string;\n  query: Document;\n\n  constructor(namespace: MongoDBNamespace, filter: Document, options: CountOptions) {\n    super(({ s: { namespace: namespace } } as unknown) as Collection, options);\n\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<number>): void {\n    const options = this.options;\n    const cmd: Document = {\n      count: this.collectionName,\n      query: this.query\n    };\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (typeof options.hint !== 'undefined') {\n      cmd.hint = options.hint;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      callback(err, result ? result.n : 0);\n    });\n  }\n}\n\ndefineAspects(CountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n"],"mappings":";;;;;;AAAA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAD,OAAA;AAmBA;AACA,MAAaE,cAAe,SAAQD,SAAA,CAAAE,gBAAwB;EAK1DC,YAAYC,SAA2B,EAAEC,MAAgB,EAAEC,OAAqB;IAC9E,KAAK,CAAE;MAAEC,CAAC,EAAE;QAAEH,SAAS,EAAEA;MAAS;IAAE,CAA4B,EAAEE,OAAO,CAAC;IAE1E,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,cAAc,GAAGJ,SAAS,CAACK,UAAU;IAC1C,IAAI,CAACC,KAAK,GAAGL,MAAM;EACrB;EAEAM,OAAOA,CAACC,MAAc,EAAEC,OAAsB,EAAEC,QAA0B;IACxE,MAAMR,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMS,GAAG,GAAa;MACpBC,KAAK,EAAE,IAAI,CAACR,cAAc;MAC1BE,KAAK,EAAE,IAAI,CAACA;KACb;IAED,IAAI,OAAOJ,OAAO,CAACW,KAAK,KAAK,QAAQ,EAAE;MACrCF,GAAG,CAACE,KAAK,GAAGX,OAAO,CAACW,KAAK;;IAG3B,IAAI,OAAOX,OAAO,CAACY,IAAI,KAAK,QAAQ,EAAE;MACpCH,GAAG,CAACG,IAAI,GAAGZ,OAAO,CAACY,IAAI;;IAGzB,IAAI,OAAOZ,OAAO,CAACa,IAAI,KAAK,WAAW,EAAE;MACvCJ,GAAG,CAACI,IAAI,GAAGb,OAAO,CAACa,IAAI;;IAGzB,IAAI,OAAOb,OAAO,CAACc,SAAS,KAAK,QAAQ,EAAE;MACzCL,GAAG,CAACK,SAAS,GAAGd,OAAO,CAACc,SAAS;;IAGnC,KAAK,CAACC,cAAc,CAACT,MAAM,EAAEC,OAAO,EAAEE,GAAG,EAAE,CAACO,GAAG,EAAEC,MAAM,KAAI;MACzDT,QAAQ,CAACQ,GAAG,EAAEC,MAAM,GAAGA,MAAM,CAACC,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;;AAvCFC,OAAA,CAAAxB,cAAA,GAAAA,cAAA;AA0CAH,WAAA,CAAA4B,aAAa,CAACzB,cAAc,EAAE,CAACH,WAAA,CAAA6B,MAAM,CAACC,cAAc,EAAE9B,WAAA,CAAA6B,MAAM,CAACE,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}