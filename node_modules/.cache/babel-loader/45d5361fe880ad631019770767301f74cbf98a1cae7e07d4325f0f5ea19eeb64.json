{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidateCollectionOperation = void 0;\nconst command_1 = require(\"./command\");\nconst error_1 = require(\"../error\");\n/** @internal */\nclass ValidateCollectionOperation extends command_1.CommandOperation {\n  constructor(admin, collectionName, options) {\n    // Decorate command with extra options\n    const command = {\n      validate: collectionName\n    };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = options[keys[i]];\n      }\n    }\n    super(admin.s.db, options);\n    this.options = options;\n    this.command = command;\n    this.collectionName = collectionName;\n  }\n  execute(server, session, callback) {\n    const collectionName = this.collectionName;\n    super.executeCommand(server, session, this.command, (err, doc) => {\n      if (err != null) return callback(err);\n      if (doc.ok === 0) return callback(new error_1.MongoDriverError('Error with validate command'));\n      if (doc.result != null && doc.result.constructor !== String) return callback(new error_1.MongoDriverError('Error with validation data'));\n      if (doc.result != null && doc.result.match(/exception|corrupt/) != null) return callback(new error_1.MongoDriverError('Error: invalid collection ' + collectionName));\n      if (doc.valid != null && !doc.valid) return callback(new error_1.MongoDriverError('Error: invalid collection ' + collectionName));\n      return callback(undefined, doc);\n    });\n  }\n}\nexports.ValidateCollectionOperation = ValidateCollectionOperation;","map":{"version":3,"names":["command_1","require","error_1","ValidateCollectionOperation","CommandOperation","constructor","admin","collectionName","options","command","validate","keys","Object","i","length","prototype","hasOwnProperty","call","s","db","execute","server","session","callback","executeCommand","err","doc","ok","MongoDriverError","result","String","match","valid","undefined","exports"],"sources":["C:\\Users\\pranav kamat\\node_modules\\mongodb\\src\\operations\\validate_collection.ts"],"sourcesContent":["import { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Admin } from '../admin';\nimport type { ClientSession } from '../sessions';\nimport { MongoDriverError } from '../error';\n\n/** @public */\nexport interface ValidateCollectionOptions extends CommandOperationOptions {\n  /** Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+) */\n  background?: boolean;\n}\n\n/** @internal */\nexport class ValidateCollectionOperation extends CommandOperation<Document> {\n  options: ValidateCollectionOptions;\n  collectionName: string;\n  command: Document;\n\n  constructor(admin: Admin, collectionName: string, options: ValidateCollectionOptions) {\n    // Decorate command with extra options\n    const command: Document = { validate: collectionName };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = (options as Document)[keys[i]];\n      }\n    }\n\n    super(admin.s.db, options);\n    this.options = options;\n    this.command = command;\n    this.collectionName = collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const collectionName = this.collectionName;\n\n    super.executeCommand(server, session, this.command, (err, doc) => {\n      if (err != null) return callback(err);\n\n      if (doc.ok === 0) return callback(new MongoDriverError('Error with validate command'));\n      if (doc.result != null && doc.result.constructor !== String)\n        return callback(new MongoDriverError('Error with validation data'));\n      if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n        return callback(new MongoDriverError('Error: invalid collection ' + collectionName));\n      if (doc.valid != null && !doc.valid)\n        return callback(new MongoDriverError('Error: invalid collection ' + collectionName));\n\n      return callback(undefined, doc);\n    });\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAMA,MAAAC,OAAA,GAAAD,OAAA;AAQA;AACA,MAAaE,2BAA4B,SAAQH,SAAA,CAAAI,gBAA0B;EAKzEC,YAAYC,KAAY,EAAEC,cAAsB,EAAEC,OAAkC;IAClF;IACA,MAAMC,OAAO,GAAa;MAAEC,QAAQ,EAAEH;IAAc,CAAE;IACtD,MAAMI,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,OAAO,CAAC;IACjC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAID,MAAM,CAACG,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,OAAO,EAAEG,IAAI,CAACE,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACE,CAAC,CAAC,KAAK,SAAS,EAAE;QACnFJ,OAAO,CAACE,IAAI,CAACE,CAAC,CAAC,CAAC,GAAIL,OAAoB,CAACG,IAAI,CAACE,CAAC,CAAC,CAAC;;;IAIrD,KAAK,CAACP,KAAK,CAACY,CAAC,CAACC,EAAE,EAAEX,OAAO,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,cAAc,GAAGA,cAAc;EACtC;EAEAa,OAAOA,CAACC,MAAc,EAAEC,OAAsB,EAAEC,QAA4B;IAC1E,MAAMhB,cAAc,GAAG,IAAI,CAACA,cAAc;IAE1C,KAAK,CAACiB,cAAc,CAACH,MAAM,EAAEC,OAAO,EAAE,IAAI,CAACb,OAAO,EAAE,CAACgB,GAAG,EAAEC,GAAG,KAAI;MAC/D,IAAID,GAAG,IAAI,IAAI,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAErC,IAAIC,GAAG,CAACC,EAAE,KAAK,CAAC,EAAE,OAAOJ,QAAQ,CAAC,IAAIrB,OAAA,CAAA0B,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;MACtF,IAAIF,GAAG,CAACG,MAAM,IAAI,IAAI,IAAIH,GAAG,CAACG,MAAM,CAACxB,WAAW,KAAKyB,MAAM,EACzD,OAAOP,QAAQ,CAAC,IAAIrB,OAAA,CAAA0B,gBAAgB,CAAC,4BAA4B,CAAC,CAAC;MACrE,IAAIF,GAAG,CAACG,MAAM,IAAI,IAAI,IAAIH,GAAG,CAACG,MAAM,CAACE,KAAK,CAAC,mBAAmB,CAAC,IAAI,IAAI,EACrE,OAAOR,QAAQ,CAAC,IAAIrB,OAAA,CAAA0B,gBAAgB,CAAC,4BAA4B,GAAGrB,cAAc,CAAC,CAAC;MACtF,IAAImB,GAAG,CAACM,KAAK,IAAI,IAAI,IAAI,CAACN,GAAG,CAACM,KAAK,EACjC,OAAOT,QAAQ,CAAC,IAAIrB,OAAA,CAAA0B,gBAAgB,CAAC,4BAA4B,GAAGrB,cAAc,CAAC,CAAC;MAEtF,OAAOgB,QAAQ,CAACU,SAAS,EAAEP,GAAG,CAAC;IACjC,CAAC,CAAC;EACJ;;AArCFQ,OAAA,CAAA/B,2BAAA,GAAAA,2BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}